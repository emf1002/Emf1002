<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
	xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
            ">
	<!-- 注入的方式可以用annotation -->
	<context:annotation-config />
	<context:component-scan base-package="mine.*" />
	<!-- 配置SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		lazy-init="false">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<!-- 定义数据库方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>

				<!-- 输出sql -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 输出格式化的sql -->
				<prop key="hibernate.format_sql">true</prop>
				<!-- 使用更新策略 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			<!-- 	<prop key="hibernate.current_session_context_class">
					org.springframework.orm.hibernate4.SpringSessionContext
				</prop> -->
				<!-- 如果不想交spring管理事务就上这个代码
						<prop key="hibernate.current_session_context_class">thread</prop>
					--> 
				<!--允许使用二级缓存-->
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<!--选择的缓存器是EhCache-->
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<!--允许使用查询缓存-->
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.connection.pool_size">2048</prop>		
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>mine.*.model</value>
				<value>mine.*.*.model</value>
				<value>mine.*.*.*.model</value>
				<value>mine.*.*.model.view</value>
			</list>
		</property>
		
	</bean>
	
		<!-- EHCACHE -->
	<bean id="defaultCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">    
		<property name="configLocation">    
			<value>classpath:ehcache.xml</value>    
		</property>    
	</bean>    
        
	<!-- 定义ehCache的工厂，并设置所使用的Cache name -->    
	<bean id="ehCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">    
		<property name="cacheManager">    
			<ref local="defaultCacheManager"/>    
		</property>    
		<property name="cacheName">    
			<value>DEFAULT_CACHE</value>    
		</property>    
	</bean> 

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/pro" />
		<property name="user" value="root" />
		<property name="password" value="root" />
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="1" />
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="1" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="300" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="exists" read-only="false" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="pageQuery*" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="cutOffIncidence" propagation="REQUIRED"/>
			<tx:method name="Load*" propagation="REQUIRED"/>
			<tx:method name="impEqTypeParams" propagation="REQUIRED"/>
			<tx:method name="do*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="bussinessService"
			expression="(execution(public * mine.emf1002.service.*.*(..))) || (execution(public * mine.emf1002.security.*.*(..))) || (execution(public * com.jbpm.**.service.*.*(..)))" />
		<aop:advisor pointcut-ref="bussinessService"
			advice-ref="txAdvice" />
	</aop:config>

</beans>
